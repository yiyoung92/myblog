import{_ as a,c as i,o as t,am as n}from"./chunks/framework.CZQMZty9.js";const c=JSON.parse('{"title":"dify学习","description":"","frontmatter":{"title":"dify学习","Link":"[[学习笔记]]","tags":["领域/学习笔记/软件"],"date":"2025-03-10T00:00:00.000Z","key-words":null},"headers":[],"relativePath":"01 知识库/dify学习.md","filePath":"01 知识库/dify学习.md","lastUpdated":1748091541000}'),e={name:"01 知识库/dify学习.md"};function l(r,s,h,o,p,d){return t(),i("div",null,s[0]||(s[0]=[n(`<h1 id="dify学习" tabindex="-1">dify学习 <a class="header-anchor" href="#dify学习" aria-label="Permalink to &quot;dify学习&quot;">​</a></h1><h1 id="部署" tabindex="-1"><strong>部署</strong> <a class="header-anchor" href="#部署" aria-label="Permalink to &quot;**部署**&quot;">​</a></h1><h2 id="_1-首先阅读并参照官方文档执行" tabindex="-1">1.首先阅读并参照官方文档执行 <a class="header-anchor" href="#_1-首先阅读并参照官方文档执行" aria-label="Permalink to &quot;1.首先阅读并参照官方文档执行&quot;">​</a></h2><p><a href="https://docs.dify.ai/zh-hans/getting-started/install-self-hosted/docker-compose" target="_blank" rel="noreferrer">dify部署官方文档</a></p><h2 id="_2-docker-compose-部署" tabindex="-1">2.Docker Compose 部署 <a class="header-anchor" href="#_2-docker-compose-部署" aria-label="Permalink to &quot;2.Docker Compose 部署&quot;">​</a></h2><p>下载并安装docker，完成注册后，打开并运行docker，登录及注册可能需要梯子。</p><h2 id="_3-dify部署" tabindex="-1">3.dify部署 <a class="header-anchor" href="#_3-dify部署" aria-label="Permalink to &quot;3.dify部署&quot;">​</a></h2><p>启动 Docker 容器，运行<code>docker compose up -d</code>指令。 <strong>问题：</strong> 第一次运行时，提示：<code>Error response from daemon: Get &quot;https://registry-1.docker.io/v2/&quot;: EOF</code>, 拉取镜像失败，大概率是网络问题。 <strong>解决方法：</strong> 设置其他可用镜像路径。 - 找到C:\\Users\\eason.docker\\daemon.json，打开并编辑 - 增加如下镜像路径代码：(如仍无法解决可能是镜像路径已失效，需重新检索。)</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;registry-mirrors&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://2a6bf1988cb6428c877f723ec7530dbc.mirror.swr.myhuaweicloud.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://docker.m.daocloud.io&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://hub-mirror.c.163.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://mirror.baidubce.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://your_preferred_mirror&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://dockerhub.icu&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://docker.registry.cyou&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://docker-cf.registry.cyou&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://dockercf.jsdelivr.fyi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://docker.jsdelivr.fyi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://dockertest.jsdelivr.fyi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://mirror.aliyuncs.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://dockerproxy.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://mirror.baidubce.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://docker.m.daocloud.io&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://docker.nju.edu.cn&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://docker.mirrors.sjtug.sjtu.edu.cn&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://docker.mirrors.ustc.edu.cn&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://mirror.iscas.ac.cn&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://docker.rainbond.cc&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="_4-同步环境变量配置-重要" tabindex="-1">4.同步环境变量配置 (重要！) <a class="header-anchor" href="#_4-同步环境变量配置-重要" aria-label="Permalink to &quot;4.同步环境变量配置 (重要！)&quot;">​</a></h2><ul><li>如果 <code>.env.example</code> 文件有更新，请务必同步修改你本地的 <code>.env</code> 文件。</li><li>检查 <code>.env</code> 文件中的所有配置项，确保它们与你的实际运行环境相匹配。你可能需要将 <code>.env.example</code> 中的新变量添加到 <code>.env</code> 文件中，并更新已更改的任何值。</li></ul><h1 id="登录" tabindex="-1"><strong>登录</strong> <a class="header-anchor" href="#登录" aria-label="Permalink to &quot;**登录**&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 本地环境 设置管理员账户，每次重启docker后建议登录</span></span>
<span class="line"><span>http://localhost/install</span></span>
<span class="line"><span># 本地环境，登录主界面</span></span>
<span class="line"><span>http://localhost</span></span>
<span class="line"><span># 服务器环境，登录主界面</span></span>
<span class="line"><span>http://your_server_ip</span></span></code></pre></div><h1 id="设置" tabindex="-1"><strong>设置</strong> <a class="header-anchor" href="#设置" aria-label="Permalink to &quot;**设置**&quot;">​</a></h1><h2 id="模型设置" tabindex="-1">模型设置 <a class="header-anchor" href="#模型设置" aria-label="Permalink to &quot;模型设置&quot;">​</a></h2><ul><li>ollama，对于docker部署的dify，建议基础URL设置为局域网ip：例如<a href="http://192.168.3.90:11434" target="_blank" rel="noreferrer">http://192.168.3.90:11434</a> 或者<a href="http://host.docker.internal:11434" target="_blank" rel="noreferrer">http://host.docker.internal:11434</a></li><li>xinference，xinference在本地访问ip为<a href="http://localhost:9998/ui/%EF%BC%8C%E5%90%8C%E4%B8%8A%E5%9B%A0%E4%B8%BAdify%E7%94%B1docker%E9%83%A8%E7%BD%B2%EF%BC%8C%E5%9B%A0%E6%AD%A4%E5%9C%A8dify%E4%B8%8A%E8%AE%BE%E7%BD%AE%E6%A8%A1%E5%9E%8B%E4%BE%9B%E5%BA%94%E5%95%86%E6%97%B6%EF%BC%8C%E8%A6%81%E6%8A%8Alocalhost%E6%9B%BF%E6%8D%A2%E4%B8%BAhttp://host.docker.internal:9998" target="_blank" rel="noreferrer">http://localhost:9998/ui/，同上因为dify由docker部署，因此在dify上设置模型供应商时，要把localhost替换为http://host.docker.internal:9998</a></li></ul><h1 id="工作流" tabindex="-1">工作流 <a class="header-anchor" href="#工作流" aria-label="Permalink to &quot;工作流&quot;">​</a></h1>`,17)]))}const E=a(e,[["render",l]]);export{c as __pageData,E as default};
